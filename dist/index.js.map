{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Memory = require( '@stdlib/wasm-memory' );\nvar nativeClass = require( '@stdlib/utils-native-class' );\n\n\n// VARIABLES //\n\nvar hasWasmMemory = ( typeof Memory === 'function' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a WebAssembly memory instance.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether the value is a WebAssembly memory instance\n*\n* @example\n* var Memory = require( '@stdlib/wasm-memory' );\n*\n* var mem = new Memory({\n*     'initial': 0\n* });\n* var bool = isWebAssemblyMemory( mem );\n* // returns true\n*\n* @example\n* var bool = isWebAssemblyMemory( [] );\n* // returns false\n*\n* @example\n* var bool = isWebAssemblyMemory( 123 );\n* // returns false\n*/\nfunction isWebAssemblyMemory( value ) {\n\treturn (\n\t\t( hasWasmMemory && value instanceof Memory ) ||\n\t\tnativeClass( value ) === '[object WebAssembly.Memory]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWebAssemblyMemory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a WebAssembly memory instance.\n*\n* @module @stdlib/assert-is-wasm-memory\n*\n* @example\n* var Memory = require( '@stdlib/wasm-memory' );\n* var isWebAssemblyMemory = require( '@stdlib/assert-is-wasm-memory' );\n*\n* var mem = new Memory({\n*     'initial': 0\n* });\n* var bool = isWebAssemblyMemory( mem );\n* // returns true\n*\n* bool = isWebAssemblyMemory( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isWebAssemblyMemory = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isWebAssemblyMemory;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,qBAAsB,EACxCC,EAAc,QAAS,4BAA6B,EAKpDC,EAAkB,OAAOF,GAAW,WA4BxC,SAASG,EAAqBC,EAAQ,CACrC,OACGF,GAAiBE,aAAiBJ,GACpCC,EAAaG,CAAM,IAAM,6BAE3B,CAKAL,EAAO,QAAUI,ICzBjB,IAAIE,EAAsB,IAK1B,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "Memory", "nativeClass", "hasWasmMemory", "isWebAssemblyMemory", "value", "isWebAssemblyMemory"]
}
